/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import dtos.ChatDTO;
import dtos.ParticipantDTO;
import dtos.UserDTO;
import exceptions.ExceptionService;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.bson.types.ObjectId;
import service.BusinessBO;

/**
 *
 * @author PC Gamer
 */
public class CreateChat extends javax.swing.JFrame {
    private BusinessBO busBO;
    private UserDTO user;
    private int mouseX, mouseY;
    
    /**
     * Creates new form CreateChat
     */
    public CreateChat(BusinessBO busBO, UserDTO user) {
        initComponents();
        this.busBO=busBO;
        this.user=user;
        this.setLocationRelativeTo(null);
        enableDrag();
    }
    
    /**
     * Método para habilitar el arrastrar
     * 
     */
    private void enableDrag() {
        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                mouseX = e.getX();
                mouseY = e.getY();
            }
        });

        addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                int x = e.getXOnScreen();
                int y = e.getYOnScreen();
                setLocation(x - mouseX, y - mouseY);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Crear Chat");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jButton2.setBackground(new java.awt.Color(37, 211, 102));
        jButton2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ACEPTAR");
        jButton2.setToolTipText("");
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 90, 30));

        jButton3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("X");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusPainted(false);
        jButton3.setFocusable(false);
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 70, 60));

        jButton4.setBackground(new java.awt.Color(37, 211, 102));
        jButton4.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("CANCELAR");
        jButton4.setToolTipText("");
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 90, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            int response = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que quieres crear este chat?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            List<ChatDTO> chats=busBO.getChatByUser(busBO.getId());
            ChatDTO chatExist = null;
            System.out.println(busBO.getUserById(busBO.getId()).getUser());
            if (chats != null) {
                for (ChatDTO chat : chats) {
                    if ((chat.getParticipants().getFirst().getUserId().equals(busBO.getId()) || chat.getParticipants().getLast().getUserId().equals(busBO.getId())) &&
                        (chat.getParticipants().getFirst().getUserId().equals(user.getId()) || chat.getParticipants().getLast().getUserId().equals(user.getId()))) {
                        
                        List<ParticipantDTO> participants = chat.getParticipants();
                        List<ParticipantDTO> newParticipants = new ArrayList<>();
                        for (ParticipantDTO participant : participants) {
                            if (!participant.getUserId().equals(busBO.getId())) {
                                System.out.println("nombre de usuario que le cambiaria a false: "+busBO.getUserById(participant.getUserId()).getUser());
                                participant.setDeleted(false);
                                newParticipants.add(participant);
                            }else{
                                newParticipants.add(participant);
                            }
                        }
                        System.out.println(newParticipants);
                        chat.setParticipants(newParticipants);
                        busBO.updateChat(chat);

                        Chatsfrm chatfrm = new Chatsfrm(busBO);
                        chatfrm.show();
                        this.dispose();
                        return;
                    }
                }
            }
            
            if(chatExist==null){
                byte[] icon = user.getProfileImage();
            String name=user.getUser();
            
            
            ChatDTO chat=new ChatDTO();
            chat.setChatImage(icon);
            chat.setChatName(name);
            chat.setCreatedAt(new Date());
            
            List<ParticipantDTO> participants=new ArrayList<>();
            
            ParticipantDTO participant=new ParticipantDTO();
            participant.setUserId(user.getId());
            participant.setDeleted(false);
            participants.add(participant);
            
            participant=new ParticipantDTO();
            participant.setUserId(busBO.getId());
            participant.setDeleted(false);
            participants.add(participant);
            
            chat.setParticipants(participants);
            
            System.out.println(chat.getChatName()+" "+chat.getParticipants().get(0)+" "+ chat.getParticipants().get(1));
            System.out.println(participants);
            
            busBO.createChat(chat);
            
            Chatsfrm chatfrm=new Chatsfrm(busBO);
            chatfrm.show();
            this.dispose();
            }
        }
        } catch (ExceptionService ex) {
            Logger.getLogger(CreateChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CreateContact cC=new CreateContact(busBO);
        cC.show();
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
